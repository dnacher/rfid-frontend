{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nlet HighchartsChartComponent = /*#__PURE__*/(() => {\n  var _HighchartsChartComponent;\n  class HighchartsChartComponent {\n    constructor(el, _zone // #75\n    ) {\n      this.el = el;\n      this._zone = _zone;\n      this.updateChange = new EventEmitter(true);\n      this.chartInstance = new EventEmitter(); // #26\n    }\n    ngOnChanges(changes) {\n      var _changes$update;\n      const update = (_changes$update = changes.update) === null || _changes$update === void 0 ? void 0 : _changes$update.currentValue;\n      if (changes.options || update) {\n        this.wrappedUpdateOrCreateChart();\n        if (update) {\n          this.updateChange.emit(false); // clear the flag after update\n        }\n      }\n    }\n    wrappedUpdateOrCreateChart() {\n      if (this.runOutsideAngular) {\n        this._zone.runOutsideAngular(() => {\n          this.updateOrCreateChart();\n        });\n      } else {\n        this.updateOrCreateChart();\n      }\n    }\n    updateOrCreateChart() {\n      var _this$chart;\n      if ((_this$chart = this.chart) !== null && _this$chart !== void 0 && _this$chart.update) {\n        this.chart.update(this.options, true, this.oneToOne || false);\n      } else {\n        this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null);\n        // emit chart instance on init\n        this.chartInstance.emit(this.chart);\n      }\n    }\n    ngOnDestroy() {\n      if (this.chart) {\n        // #56\n        this.chart.destroy();\n        this.chart = null;\n        // emit chart instance on destroy\n        this.chartInstance.emit(this.chart);\n      }\n    }\n  }\n  _HighchartsChartComponent = HighchartsChartComponent;\n  _HighchartsChartComponent.ɵfac = function _HighchartsChartComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _HighchartsChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  _HighchartsChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _HighchartsChartComponent,\n    selectors: [[\"highcharts-chart\"]],\n    inputs: {\n      Highcharts: \"Highcharts\",\n      constructorType: \"constructorType\",\n      callbackFunction: \"callbackFunction\",\n      oneToOne: \"oneToOne\",\n      runOutsideAngular: \"runOutsideAngular\",\n      options: \"options\",\n      update: \"update\"\n    },\n    outputs: {\n      updateChange: \"updateChange\",\n      chartInstance: \"chartInstance\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function _HighchartsChartComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return HighchartsChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HighchartsChartModule = /*#__PURE__*/(() => {\n  var _HighchartsChartModule;\n  class HighchartsChartModule {}\n  _HighchartsChartModule = HighchartsChartModule;\n  _HighchartsChartModule.ɵfac = function _HighchartsChartModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _HighchartsChartModule)();\n  };\n  _HighchartsChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _HighchartsChartModule\n  });\n  _HighchartsChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return HighchartsChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of highcharts-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HighchartsChartComponent, HighchartsChartModule };\n//# sourceMappingURL=highcharts-angular.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}